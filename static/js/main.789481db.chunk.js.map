{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","useState","inputField","setInputField","fields","setFields","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","action","autoComplete","onSubmit","e","preventDefault","copy","push","className","type","required","value","onChange","target","id","length","map","field","onClick","name","new_list","filter","handleDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAyDeA,EArDH,WACV,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,sBAClCJ,EAAUK,KAAKC,MAAMJ,MACpB,IAGHD,qBAAU,WACRE,aAAaI,QAAQ,qBAAsBF,KAAKG,UAAUT,OAsBxD,OACE,8BACE,mCACF,uBAAMU,OAAO,GAAGC,aAAa,MAAMC,SAtBxB,SAACC,GAChBA,EAAEC,iBACF,IAAIC,EAAOf,EACXe,EAAKC,KAAKlB,GACVG,EAAUc,GACVhB,EAAc,KAiBV,UACI,uBAAOkB,UAAU,YAAYC,KAAK,OAAOC,UAAQ,EAACC,MAAOtB,EAAYuB,SAAU,SAAAR,GAAC,OAAId,EAAcc,EAAES,OAAOF,UAC3G,uBAAK,uBACL,wBAAQG,GAAG,MAAX,yBAEJ,uBACA,uBACA,uBACoB,IAAlBvB,EAAOwB,OAAgBxB,EAAOyB,KAAI,SAAAC,GAAK,OAAK,sBAAKT,UAAU,YAAf,UAC3CS,EACD,wBAAQT,UAAU,MAAMU,QAAS,kBAtBpB,SAACC,GACpB,IAAIC,EAAW7B,EAAO8B,QAAO,SAAAJ,GAC3B,OAAOA,IAAUE,KAGnB3B,EAAU4B,GAiBmCE,CAAaL,IAApD,0BACS,qBAAKT,UAAU,YAAf,mCC9CnBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.789481db.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport './App.css'\n\nconst App = () => {\n  const [inputField, setInputField] = useState('')\n  const [fields, setFields] = useState([])\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"task-tracker-tasks\")\n    setFields(JSON.parse(data))\n  }, [])\n\n\n  useEffect(() => {\n    localStorage.setItem(\"task-tracker-tasks\", JSON.stringify(fields))\n  })\n\n  const addField = (e) => {\n    e.preventDefault()\n    let copy = fields\n    copy.push(inputField)\n    setFields(copy)\n    setInputField('')\n  }\n\n\n\n  const handleDelete = (name) => {\n    let new_list = fields.filter(field => {\n      return field !== name\n    })\n\n    setFields(new_list)\n  }\n\n\n      return (\n        <div>\n          <center>\n        <form action=\"\" autoComplete=\"off\" onSubmit={addField}>\n            <input className=\"inp-field\" type=\"text\" required value={inputField} onChange={e => setInputField(e.target.value)}/>\n            <br/><br/>\n            <button id=\"sub\">Add Task</button>\n        </form>\n        <br/>\n        <br/>\n        <br/>\n        {(fields.length !== 0) ? fields.map(field => (<div className=\"list-item\">\n          {field}\n          <button className=\"del\" onClick={() => handleDelete(field)}>Delete</button>\n        </div>)) : <div className=\"list-item\"> No tasks here.</div>}\n        </center>\n        </div>\n      )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}